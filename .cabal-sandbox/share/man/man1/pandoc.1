.TH PANDOC 1 "January 19, 2013" "Pandoc User\[aq]s Guide"
.SH NAME
pandoc - general markup converter
.SH SYNOPSIS
.PP
pandoc [\f[I]options\f[]] [\f[I]input\-file\f[]]...
.SH DESCRIPTION
.PP
Pandoc is a Haskell library for converting from one markup format to
another, and a command\-line tool that uses this library.
It can read markdown and (subsets of) Textile, reStructuredText, HTML,
LaTeX, MediaWiki markup, Haddock markup, OPML, and DocBook; and it can
write plain text, markdown, reStructuredText, XHTML, HTML 5, LaTeX
(including beamer slide shows), ConTeXt, RTF, OPML, DocBook,
OpenDocument, ODT, Word docx, GNU Texinfo, MediaWiki markup, EPUB (v2 or
v3), FictionBook2, Textile, groff man pages, Emacs Org\-Mode, AsciiDoc,
and Slidy, Slideous, DZSlides, reveal.js or S5 HTML slide shows.
It can also produce PDF output on systems where LaTeX is installed.
.PP
Pandoc\[aq]s enhanced version of markdown includes syntax for footnotes,
tables, flexible ordered lists, definition lists, fenced code blocks,
superscript, subscript, strikeout, title blocks, automatic tables of
contents, embedded LaTeX math, citations, and markdown inside HTML block
elements.
(These enhancements, described below under Pandoc\[aq]s markdown, can be
disabled using the \f[C]markdown_strict\f[] input or output format.)
.PP
In contrast to most existing tools for converting markdown to HTML,
which use regex substitutions, Pandoc has a modular design: it consists
of a set of readers, which parse text in a given format and produce a
native representation of the document, and a set of writers, which
convert this native representation into a target format.
Thus, adding an input or output format requires only adding a reader or
writer.
.SS Using \f[C]pandoc\f[]
.PP
If no \f[I]input\-file\f[] is specified, input is read from
\f[I]stdin\f[].
Otherwise, the \f[I]input\-files\f[] are concatenated (with a blank line
between each) and used as input.
Output goes to \f[I]stdout\f[] by default (though output to
\f[I]stdout\f[] is disabled for the \f[C]odt\f[], \f[C]docx\f[],
\f[C]epub\f[], and \f[C]epub3\f[] output formats).
For output to a file, use the \f[C]\-o\f[] option:
.IP
.nf
\f[C]
pandoc\ \-o\ output.html\ input.txt
\f[]
.fi
.PP
Instead of a file, an absolute URI may be given.
In this case pandoc will fetch the content using HTTP:
.IP
.nf
\f[C]
pandoc\ \-f\ html\ \-t\ markdown\ http://www.fsf.org
\f[]
.fi
.PP
If multiple input files are given, \f[C]pandoc\f[] will concatenate them
all (with blank lines between them) before parsing.
.PP
The format of the input and output can be specified explicitly using
command\-line options.
The input format can be specified using the \f[C]\-r/\-\-read\f[] or
\f[C]\-f/\-\-from\f[] options, the output format using the
\f[C]\-w/\-\-write\f[] or \f[C]\-t/\-\-to\f[] options.
Thus, to convert \f[C]hello.txt\f[] from markdown to LaTeX, you could
type:
.IP
.nf
\f[C]
pandoc\ \-f\ markdown\ \-t\ latex\ hello.txt
\f[]
.fi
.PP
To convert \f[C]hello.html\f[] from html to markdown:
.IP
.nf
\f[C]
pandoc\ \-f\ html\ \-t\ markdown\ hello.html
\f[]
.fi
.PP
Supported output formats are listed below under the \f[C]\-t/\-\-to\f[]
option.
Supported input formats are listed below under the \f[C]\-f/\-\-from\f[]
option.
Note that the \f[C]rst\f[], \f[C]textile\f[], \f[C]latex\f[], and
\f[C]html\f[] readers are not complete; there are some constructs that
they do not parse.
.PP
If the input or output format is not specified explicitly,
\f[C]pandoc\f[] will attempt to guess it from the extensions of the
input and output filenames.
Thus, for example,
.IP
.nf
\f[C]
pandoc\ \-o\ hello.tex\ hello.txt
\f[]
.fi
.PP
will convert \f[C]hello.txt\f[] from markdown to LaTeX.
If no output file is specified (so that output goes to \f[I]stdout\f[]),
or if the output file\[aq]s extension is unknown, the output format will
default to HTML.
If no input file is specified (so that input comes from \f[I]stdin\f[]),
or if the input files\[aq] extensions are unknown, the input format will
be assumed to be markdown unless explicitly specified.
.PP
Pandoc uses the UTF\-8 character encoding for both input and output.
If your local character encoding is not UTF\-8, you should pipe input
and output through \f[C]iconv\f[]:
.IP
.nf
\f[C]
iconv\ \-t\ utf\-8\ input.txt\ |\ pandoc\ |\ iconv\ \-f\ utf\-8
\f[]
.fi
.SS Creating a PDF
.PP
Earlier versions of pandoc came with a program, \f[C]markdown2pdf\f[],
that used pandoc and pdflatex to produce a PDF.
This is no longer needed, since \f[C]pandoc\f[] can now produce
\f[C]pdf\f[] output itself.
To produce a PDF, simply specify an output file with a \f[C]\&.pdf\f[]
extension.
Pandoc will create a latex file and use pdflatex (or another engine, see
\f[C]\-\-latex\-engine\f[]) to convert it to PDF:
.IP
.nf
\f[C]
pandoc\ test.txt\ \-o\ test.pdf
\f[]
.fi
.PP
Production of a PDF requires that a LaTeX engine be installed (see
\f[C]\-\-latex\-engine\f[], below), and assumes that the following LaTeX
packages are available: \f[C]amssymb\f[], \f[C]amsmath\f[],
\f[C]ifxetex\f[], \f[C]ifluatex\f[], \f[C]listings\f[] (if the
\f[C]\-\-listings\f[] option is used), \f[C]fancyvrb\f[],
\f[C]longtable\f[], \f[C]booktabs\f[], \f[C]url\f[], \f[C]graphicx\f[],
\f[C]hyperref\f[], \f[C]ulem\f[], \f[C]babel\f[] (if the \f[C]lang\f[]
variable is set), \f[C]fontspec\f[] (if \f[C]xelatex\f[] or
\f[C]lualatex\f[] is used as the LaTeX engine), \f[C]xltxtra\f[] and
\f[C]xunicode\f[] (if \f[C]xelatex\f[] is used).
.SS \f[C]hsmarkdown\f[]
.PP
A user who wants a drop\-in replacement for \f[C]Markdown.pl\f[] may
create a symbolic link to the \f[C]pandoc\f[] executable called
\f[C]hsmarkdown\f[].
When invoked under the name \f[C]hsmarkdown\f[], \f[C]pandoc\f[] will
behave as if invoked with
\f[C]\-f\ markdown_strict\ \-\-email\-obfuscation=references\f[], and
all command\-line options will be treated as regular arguments.
However, this approach does not work under Cygwin, due to problems with
its simulation of symbolic links.
.SH OPTIONS
.SS General options
.TP
.B \f[C]\-f\f[] \f[I]FORMAT\f[], \f[C]\-r\f[] \f[I]FORMAT\f[],
\f[C]\-\-from=\f[]\f[I]FORMAT\f[], \f[C]\-\-read=\f[]\f[I]FORMAT\f[]
Specify input format.
\f[I]FORMAT\f[] can be \f[C]native\f[] (native Haskell), \f[C]json\f[]
(JSON version of native AST), \f[C]markdown\f[] (pandoc\[aq]s extended
markdown), \f[C]markdown_strict\f[] (original unextended markdown),
\f[C]markdown_phpextra\f[] (PHP Markdown Extra extended markdown),
\f[C]markdown_github\f[] (github extended markdown), \f[C]textile\f[]
(Textile), \f[C]rst\f[] (reStructuredText), \f[C]html\f[] (HTML),
\f[C]docbook\f[] (DocBook), \f[C]opml\f[] (OPML), \f[C]mediawiki\f[]
(MediaWiki markup), \f[C]haddock\f[] (Haddock markup), or \f[C]latex\f[]
(LaTeX).
If \f[C]+lhs\f[] is appended to \f[C]markdown\f[], \f[C]rst\f[],
\f[C]latex\f[], or \f[C]html\f[], the input will be treated as literate
Haskell source: see Literate Haskell support, below.
Markdown syntax extensions can be individually enabled or disabled by
appending \f[C]+EXTENSION\f[] or \f[C]\-EXTENSION\f[] to the format
name.
So, for example, \f[C]markdown_strict+footnotes+definition_lists\f[] is
strict markdown with footnotes and definition lists enabled, and
\f[C]markdown\-pipe_tables+hard_line_breaks\f[] is pandoc\[aq]s markdown
without pipe tables and with hard line breaks.
See Pandoc\[aq]s markdown, below, for a list of extensions and their
names.
.RS
.RE
.TP
.B \f[C]\-t\f[] \f[I]FORMAT\f[], \f[C]\-w\f[] \f[I]FORMAT\f[],
\f[C]\-\-to=\f[]\f[I]FORMAT\f[], \f[C]\-\-write=\f[]\f[I]FORMAT\f[]
Specify output format.
\f[I]FORMAT\f[] can be \f[C]native\f[] (native Haskell), \f[C]json\f[]
(JSON version of native AST), \f[C]plain\f[] (plain text),
\f[C]markdown\f[] (pandoc\[aq]s extended markdown),
\f[C]markdown_strict\f[] (original unextended markdown),
\f[C]markdown_phpextra\f[] (PHP Markdown extra extended markdown),
\f[C]markdown_github\f[] (github extended markdown), \f[C]rst\f[]
(reStructuredText), \f[C]html\f[] (XHTML 1), \f[C]html5\f[] (HTML 5),
\f[C]latex\f[] (LaTeX), \f[C]beamer\f[] (LaTeX beamer slide show),
\f[C]context\f[] (ConTeXt), \f[C]man\f[] (groff man), \f[C]mediawiki\f[]
(MediaWiki markup), \f[C]textile\f[] (Textile), \f[C]org\f[] (Emacs
Org\-Mode), \f[C]texinfo\f[] (GNU Texinfo), \f[C]opml\f[] (OPML),
\f[C]docbook\f[] (DocBook), \f[C]opendocument\f[] (OpenDocument),
\f[C]odt\f[] (OpenOffice text document), \f[C]docx\f[] (Word docx),
\f[C]rtf\f[] (rich text format), \f[C]epub\f[] (EPUB v2 book),
\f[C]epub3\f[] (EPUB v3), \f[C]fb2\f[] (FictionBook2 e\-book),
\f[C]asciidoc\f[] (AsciiDoc), \f[C]slidy\f[] (Slidy HTML and javascript
slide show), \f[C]slideous\f[] (Slideous HTML and javascript slide
show), \f[C]dzslides\f[] (DZSlides HTML5 + javascript slide show),
\f[C]revealjs\f[] (reveal.js HTML5 + javascript slide show), \f[C]s5\f[]
(S5 HTML and javascript slide show), or the path of a custom lua writer
(see Custom writers, below).
Note that \f[C]odt\f[], \f[C]epub\f[], and \f[C]epub3\f[] output will
not be directed to \f[I]stdout\f[]; an output filename must be specified
using the \f[C]\-o/\-\-output\f[] option.
If \f[C]+lhs\f[] is appended to \f[C]markdown\f[], \f[C]rst\f[],
\f[C]latex\f[], \f[C]beamer\f[], \f[C]html\f[], or \f[C]html5\f[], the
output will be rendered as literate Haskell source: see Literate Haskell
support, below.
Markdown syntax extensions can be individually enabled or disabled by
appending \f[C]+EXTENSION\f[] or \f[C]\-EXTENSION\f[] to the format
name, as described above under \f[C]\-f\f[].
.RS
.RE
.TP
.B \f[C]\-o\f[] \f[I]FILE\f[], \f[C]\-\-output=\f[]\f[I]FILE\f[]
Write output to \f[I]FILE\f[] instead of \f[I]stdout\f[].
If \f[I]FILE\f[] is \f[C]\-\f[], output will go to \f[I]stdout\f[].
(Exception: if the output format is \f[C]odt\f[], \f[C]docx\f[],
\f[C]epub\f[], or \f[C]epub3\f[], output to stdout is disabled.)
.RS
.RE
.TP
.B \f[C]\-\-data\-dir=\f[]\f[I]DIRECTORY\f[]
Specify the user data directory to search for pandoc data files.
If this option is not specified, the default user data directory will be
used.
This is
.RS
.IP
.nf
\f[C]
$HOME/.pandoc
\f[]
.fi
.PP
in unix,
.IP
.nf
\f[C]
C:\\Documents\ And\ Settings\\USERNAME\\Application\ Data\\pandoc
\f[]
.fi
.PP
in Windows XP, and
.IP
.nf
\f[C]
C:\\Users\\USERNAME\\AppData\\Roaming\\pandoc
\f[]
.fi
.PP
in Windows 7.
(You can find the default user data directory on your system by looking
at the output of \f[C]pandoc\ \-\-version\f[].) A
\f[C]reference.odt\f[], \f[C]reference.docx\f[], \f[C]default.csl\f[],
\f[C]epub.css\f[], \f[C]templates\f[], \f[C]slidy\f[],
\f[C]slideous\f[], or \f[C]s5\f[] directory placed in this directory
will override pandoc\[aq]s normal defaults.
.RE
.TP
.B \f[C]\-v\f[], \f[C]\-\-version\f[]
Print version.
.RS
.RE
.TP
.B \f[C]\-h\f[], \f[C]\-\-help\f[]
Show usage message.
.RS
.RE
.SS Reader options
.TP
.B \f[C]\-R\f[], \f[C]\-\-parse\-raw\f[]
Parse untranslatable HTML codes and LaTeX environments as raw HTML or
LaTeX, instead of ignoring them.
Affects only HTML and LaTeX input.
Raw HTML can be printed in markdown, reStructuredText, HTML, Slidy,
Slideous, DZSlides, reveal.js, and S5 output; raw LaTeX can be printed
in markdown, reStructuredText, LaTeX, and ConTeXt output.
The default is for the readers to omit untranslatable HTML codes and
LaTeX environments.
(The LaTeX reader does pass through untranslatable LaTeX
\f[I]commands\f[], even if \f[C]\-R\f[] is not specified.)
.RS
.RE
.TP
.B \f[C]\-S\f[], \f[C]\-\-smart\f[]
Produce typographically correct output, converting straight quotes to
curly quotes, \f[C]\-\-\-\f[] to em\-dashes, \f[C]\-\-\f[] to
en\-dashes, and \f[C]\&...\f[] to ellipses.
Nonbreaking spaces are inserted after certain abbreviations, such as
"Mr." (Note: This option is significant only when the input format is
\f[C]markdown\f[], \f[C]markdown_strict\f[], or \f[C]textile\f[].
It is selected automatically when the input format is \f[C]textile\f[]
or the output format is \f[C]latex\f[] or \f[C]context\f[], unless
\f[C]\-\-no\-tex\-ligatures\f[] is used.)
.RS
.RE
.TP
.B \f[C]\-\-old\-dashes\f[]
Selects the pandoc <= 1.8.2.1 behavior for parsing smart dashes:
\f[C]\-\f[] before a numeral is an en\-dash, and \f[C]\-\-\f[] is an
em\-dash.
This option is selected automatically for \f[C]textile\f[] input.
.RS
.RE
.TP
.B \f[C]\-\-base\-header\-level=\f[]\f[I]NUMBER\f[]
Specify the base level for headers (defaults to 1).
.RS
.RE
.TP
.B \f[C]\-\-indented\-code\-classes=\f[]\f[I]CLASSES\f[]
Specify classes to use for indented code blocks\-\-for example,
\f[C]perl,numberLines\f[] or \f[C]haskell\f[].
Multiple classes may be separated by spaces or commas.
.RS
.RE
.TP
.B \f[C]\-\-default\-image\-extension=\f[]\f[I]EXTENSION\f[]
Specify a default extension to use when image paths/URLs have no
extension.
This allows you to use the same source for formats that require
different kinds of images.
Currently this option only affects the markdown and LaTeX readers.
.RS
.RE
.TP
.B \f[C]\-\-filter=\f[]\f[I]EXECUTABLE\f[]
Specify an executable to be used as a filter transforming the Pandoc AST
after the input is parsed and before the output is written.
The executable should read JSON from stdin and write JSON to stdout.
The JSON must be formatted like pandoc\[aq]s own JSON input and output.
The name of the output format will be passed to the filter as the first
argument.
Hence,
.RS
.IP
.nf
\f[C]
pandoc\ \-\-filter\ ./caps.py\ \-t\ latex
\f[]
.fi
.PP
is equivalent to
.IP
.nf
\f[C]
pandoc\ \-t\ json\ |\ ./caps.py\ latex\ |\ pandoc\ \-f\ json\ \-t\ latex
\f[]
.fi
.PP
The latter form may be useful for debugging filters.
.PP
Filters may be written in any language.
\f[C]Text.Pandoc.JSON\f[] exports \f[C]toJSONFilter\f[] to facilitate
writing filters in Haskell.
Those who would prefer to write filters in python can use the module
\f[C]pandocfilters\f[], installable from PyPI.
See http://github.com/jgm/pandocfilters for the module and several
examples.
Note that the \f[I]EXECUTABLE\f[] will be sought in the user\[aq]s
\f[C]PATH\f[], and not in the working directory, if no directory is
provided.
If you want to run a script in the working directory, preface the
filename with \f[C]\&./\f[].
.RE
.TP
.B \f[C]\-M\f[] \f[I]KEY[=VAL]\f[],
\f[C]\-\-metadata=\f[]\f[I]KEY[:VAL]\f[]
Set the metadata field \f[I]KEY\f[] to the value \f[I]VAL\f[].
A value specified on the command line overrides a value specified in the
document.
Values will be parsed as YAML boolean or string values.
If no value is specified, the value will be treated as Boolean true.
Like \f[C]\-\-variable\f[], \f[C]\-\-metadata\f[] causes template
variables to be set.
But unlike \f[C]\-\-variable\f[], \f[C]\-\-metadata\f[] affects the
metadata of the underlying document (which is accessible from filters
and may be printed in some output formats).
.RS
.RE
.TP
.B \f[C]\-\-normalize\f[]
Normalize the document after reading: merge adjacent \f[C]Str\f[] or
\f[C]Emph\f[] elements, for example, and remove repeated
\f[C]Space\f[]s.
.RS
.RE
.TP
.B \f[C]\-p\f[], \f[C]\-\-preserve\-tabs\f[]
Preserve tabs instead of converting them to spaces (the default).
Note that this will only affect tabs in literal code spans and code
blocks; tabs in regular text will be treated as spaces.
.RS
.RE
.TP
.B \f[C]\-\-tab\-stop=\f[]\f[I]NUMBER\f[]
Specify the number of spaces per tab (default is 4).
.RS
.RE
.SS General writer options
.TP
.B \f[C]\-s\f[], \f[C]\-\-standalone\f[]
Produce output with an appropriate header and footer (e.g.
a standalone HTML, LaTeX, or RTF file, not a fragment).
This option is set automatically for \f[C]pdf\f[], \f[C]epub\f[],
\f[C]epub3\f[], \f[C]fb2\f[], \f[C]docx\f[], and \f[C]odt\f[] output.
.RS
.RE
.TP
.B \f[C]\-\-template=\f[]\f[I]FILE\f[]
Use \f[I]FILE\f[] as a custom template for the generated document.
Implies \f[C]\-\-standalone\f[].
See Templates below for a description of template syntax.
If no extension is specified, an extension corresponding to the writer
will be added, so that \f[C]\-\-template=special\f[] looks for
\f[C]special.html\f[] for HTML output.
If the template is not found, pandoc will search for it in the user data
directory (see \f[C]\-\-data\-dir\f[]).
If this option is not used, a default template appropriate for the
output format will be used (see
\f[C]\-D/\-\-print\-default\-template\f[]).
.RS
.RE
.TP
.B \f[C]\-V\f[] \f[I]KEY[=VAL]\f[],
\f[C]\-\-variable=\f[]\f[I]KEY[:VAL]\f[]
Set the template variable \f[I]KEY\f[] to the value \f[I]VAL\f[] when
rendering the document in standalone mode.
This is generally only useful when the \f[C]\-\-template\f[] option is
used to specify a custom template, since pandoc automatically sets the
variables used in the default templates.
If no \f[I]VAL\f[] is specified, the key will be given the value
\f[C]true\f[].
.RS
.RE
.TP
.B \f[C]\-D\f[] \f[I]FORMAT\f[],
\f[C]\-\-print\-default\-template=\f[]\f[I]FORMAT\f[]
Print the default template for an output \f[I]FORMAT\f[].
(See \f[C]\-t\f[] for a list of possible \f[I]FORMAT\f[]s.)
.RS
.RE
.TP
.B \f[C]\-\-print\-default\-data\-file=\f[]\f[I]FILE\f[]
Print a default data file.
.RS
.RE
.TP
.B \f[C]\-\-no\-wrap\f[]
Disable text wrapping in output.
By default, text is wrapped appropriately for the output format.
.RS
.RE
.TP
.B \f[C]\-\-columns\f[]=\f[I]NUMBER\f[]
Specify length of lines in characters (for text wrapping).
.RS
.RE
.TP
.B \f[C]\-\-toc\f[], \f[C]\-\-table\-of\-contents\f[]
Include an automatically generated table of contents (or, in the case of
\f[C]latex\f[], \f[C]context\f[], and \f[C]rst\f[], an instruction to
create one) in the output document.
This option has no effect on \f[C]man\f[], \f[C]docbook\f[],
\f[C]slidy\f[], \f[C]slideous\f[], \f[C]s5\f[], \f[C]docx\f[], or
\f[C]odt\f[] output.
.RS
.RE
.TP
.B \f[C]\-\-toc\-depth=\f[]\f[I]NUMBER\f[]
Specify the number of section levels to include in the table of
contents.
The default is 3 (which means that level 1, 2, and 3 headers will be
listed in the contents).
.RS
.RE
.TP
.B \f[C]\-\-no\-highlight\f[]
Disables syntax highlighting for code blocks and inlines, even when a
language attribute is given.
.RS
.RE
.TP
.B \f[C]\-\-highlight\-style\f[]=\f[I]STYLE\f[]
Specifies the coloring style to be used in highlighted source code.
Options are \f[C]pygments\f[] (the default), \f[C]kate\f[],
\f[C]monochrome\f[], \f[C]espresso\f[], \f[C]zenburn\f[],
\f[C]haddock\f[], and \f[C]tango\f[].
.RS
.RE
.TP
.B \f[C]\-H\f[] \f[I]FILE\f[],
\f[C]\-\-include\-in\-header=\f[]\f[I]FILE\f[]
Include contents of \f[I]FILE\f[], verbatim, at the end of the header.
This can be used, for example, to include special CSS or javascript in
HTML documents.
This option can be used repeatedly to include multiple files in the
header.
They will be included in the order specified.
Implies \f[C]\-\-standalone\f[].
.RS
.RE
.TP
.B \f[C]\-B\f[] \f[I]FILE\f[],
\f[C]\-\-include\-before\-body=\f[]\f[I]FILE\f[]
Include contents of \f[I]FILE\f[], verbatim, at the beginning of the
document body (e.g.
after the \f[C]<body>\f[] tag in HTML, or the \f[C]\\begin{document}\f[]
command in LaTeX).
This can be used to include navigation bars or banners in HTML
documents.
This option can be used repeatedly to include multiple files.
They will be included in the order specified.
Implies \f[C]\-\-standalone\f[].
.RS
.RE
.TP
.B \f[C]\-A\f[] \f[I]FILE\f[],
\f[C]\-\-include\-after\-body=\f[]\f[I]FILE\f[]
Include contents of \f[I]FILE\f[], verbatim, at the end of the document
body (before the \f[C]</body>\f[] tag in HTML, or the
\f[C]\\end{document}\f[] command in LaTeX).
This option can be be used repeatedly to include multiple files.
They will be included in the order specified.
Implies \f[C]\-\-standalone\f[].
.RS
.RE
.SS Options affecting specific writers
.TP
.B \f[C]\-\-self\-contained\f[]
Produce a standalone HTML file with no external dependencies, using
\f[C]data:\f[] URIs to incorporate the contents of linked scripts,
stylesheets, images, and videos.
The resulting file should be "self\-contained," in the sense that it
needs no external files and no net access to be displayed properly by a
browser.
This option works only with HTML output formats, including
\f[C]html\f[], \f[C]html5\f[], \f[C]html+lhs\f[], \f[C]html5+lhs\f[],
\f[C]s5\f[], \f[C]slidy\f[], \f[C]slideous\f[], \f[C]dzslides\f[], and
\f[C]revealjs\f[].
Scripts, images, and stylesheets at absolute URLs will be downloaded;
those at relative URLs will be sought first relative to the working
directory, then relative to the user data directory (see
\f[C]\-\-data\-dir\f[]), and finally relative to pandoc\[aq]s default
data directory.
\f[C]\-\-self\-contained\f[] does not work with \f[C]\-\-mathjax\f[].
.RS
.RE
.TP
.B \f[C]\-\-offline\f[]
Deprecated synonym for \f[C]\-\-self\-contained\f[].
.RS
.RE
.TP
.B \f[C]\-5\f[], \f[C]\-\-html5\f[]
Produce HTML5 instead of HTML4.
This option has no effect for writers other than \f[C]html\f[].
(\f[I]Deprecated:\f[] Use the \f[C]html5\f[] output format instead.)
.RS
.RE
.TP
.B \f[C]\-\-html\-q\-tags\f[]
Use \f[C]<q>\f[] tags for quotes in HTML.
.RS
.RE
.TP
.B \f[C]\-\-ascii\f[]
Use only ascii characters in output.
Currently supported only for HTML output (which uses numerical entities
instead of UTF\-8 when this option is selected).
.RS
.RE
.TP
.B \f[C]\-\-reference\-links\f[]
Use reference\-style links, rather than inline links, in writing
markdown or reStructuredText.
By default inline links are used.
.RS
.RE
.TP
.B \f[C]\-\-atx\-headers\f[]
Use ATX style headers in markdown and asciidoc output.
The default is to use setext\-style headers for levels 1\-2, and then
ATX headers.
.RS
.RE
.TP
.B \f[C]\-\-chapters\f[]
Treat top\-level headers as chapters in LaTeX, ConTeXt, and DocBook
output.
When the LaTeX template uses the report, book, or memoir class, this
option is implied.
If \f[C]beamer\f[] is the output format, top\-level headers will become
\f[C]\\part{..}\f[].
.RS
.RE
.TP
.B \f[C]\-N\f[], \f[C]\-\-number\-sections\f[]
Number section headings in LaTeX, ConTeXt, HTML, or EPUB output.
By default, sections are not numbered.
Sections with class \f[C]unnumbered\f[] will never be numbered, even if
\f[C]\-\-number\-sections\f[] is specified.
.RS
.RE
.TP
.B \f[C]\-\-number\-offset\f[]=\f[I]NUMBER[,NUMBER,...]\f[],
Offset for section headings in HTML output (ignored in other output
formats).
The first number is added to the section number for top\-level headers,
the second for second\-level headers, and so on.
So, for example, if you want the first top\-level header in your
document to be numbered "6", specify \f[C]\-\-number\-offset=5\f[].
If your document starts with a level\-2 header which you want to be
numbered "1.5", specify \f[C]\-\-number\-offset=1,4\f[].
Offsets are 0 by default.
Implies \f[C]\-\-number\-sections\f[].
.RS
.RE
.TP
.B \f[C]\-\-no\-tex\-ligatures\f[]
Do not convert quotation marks, apostrophes, and dashes to the TeX
ligatures when writing LaTeX or ConTeXt.
Instead, just use literal unicode characters.
This is needed for using advanced OpenType features with XeLaTeX and
LuaLaTeX.
Note: normally \f[C]\-\-smart\f[] is selected automatically for LaTeX
and ConTeXt output, but it must be specified explicitly if
\f[C]\-\-no\-tex\-ligatures\f[] is selected.
If you use literal curly quotes, dashes, and ellipses in your source,
then you may want to use \f[C]\-\-no\-tex\-ligatures\f[] without
\f[C]\-\-smart\f[].
.RS
.RE
.TP
.B \f[C]\-\-listings\f[]
Use listings package for LaTeX code blocks
.RS
.RE
.TP
.B \f[C]\-i\f[], \f[C]\-\-incremental\f[]
Make list items in slide shows display incrementally (one by one).
The default is for lists to be displayed all at once.
.RS
.RE
.TP
.B \f[C]\-\-slide\-level\f[]=\f[I]NUMBER\f[]
Specifies that headers with the specified level create slides (for
\f[C]beamer\f[], \f[C]s5\f[], \f[C]slidy\f[], \f[C]slideous\f[],
\f[C]dzslides\f[]).
Headers above this level in the hierarchy are used to divide the slide
show into sections; headers below this level create subheads within a
slide.
The default is to set the slide level based on the contents of the
document; see Structuring the slide show, below.
.RS
.RE
.TP
.B \f[C]\-\-section\-divs\f[]
Wrap sections in \f[C]<div>\f[] tags (or \f[C]<section>\f[] tags in
HTML5), and attach identifiers to the enclosing \f[C]<div>\f[] (or
\f[C]<section>\f[]) rather than the header itself.
See Section identifiers, below.
.RS
.RE
.TP
.B \f[C]\-\-email\-obfuscation=\f[]\f[I]none|javascript|references\f[]
Specify a method for obfuscating \f[C]mailto:\f[] links in HTML
documents.
\f[I]none\f[] leaves \f[C]mailto:\f[] links as they are.
\f[I]javascript\f[] obfuscates them using javascript.
\f[I]references\f[] obfuscates them by printing their letters as decimal
or hexadecimal character references.
.RS
.RE
.TP
.B \f[C]\-\-id\-prefix\f[]=\f[I]STRING\f[]
Specify a prefix to be added to all automatically generated identifiers
in HTML and DocBook output, and to footnote numbers in markdown output.
This is useful for preventing duplicate identifiers when generating
fragments to be included in other pages.
.RS
.RE
.TP
.B \f[C]\-T\f[] \f[I]STRING\f[],
\f[C]\-\-title\-prefix=\f[]\f[I]STRING\f[]
Specify \f[I]STRING\f[] as a prefix at the beginning of the title that
appears in the HTML header (but not in the title as it appears at the
beginning of the HTML body).
Implies \f[C]\-\-standalone\f[].
.RS
.RE
.TP
.B \f[C]\-c\f[] \f[I]URL\f[], \f[C]\-\-css=\f[]\f[I]URL\f[]
Link to a CSS style sheet.
This option can be be used repeatedly to include multiple files.
They will be included in the order specified.
.RS
.RE
.TP
.B \f[C]\-\-reference\-odt=\f[]\f[I]FILE\f[]
Use the specified file as a style reference in producing an ODT.
For best results, the reference ODT should be a modified version of an
ODT produced using pandoc.
The contents of the reference ODT are ignored, but its stylesheets are
used in the new ODT.
If no reference ODT is specified on the command line, pandoc will look
for a file \f[C]reference.odt\f[] in the user data directory (see
\f[C]\-\-data\-dir\f[]).
If this is not found either, sensible defaults will be used.
.RS
.RE
.TP
.B \f[C]\-\-reference\-docx=\f[]\f[I]FILE\f[]
Use the specified file as a style reference in producing a docx file.
For best results, the reference docx should be a modified version of a
docx file produced using pandoc.
The contents of the reference docx are ignored, but its stylesheets are
used in the new docx.
If no reference docx is specified on the command line, pandoc will look
for a file \f[C]reference.docx\f[] in the user data directory (see
\f[C]\-\-data\-dir\f[]).
If this is not found either, sensible defaults will be used.
The following styles are used by pandoc: [paragraph] Normal, Compact,
Title, Authors, Date, Heading 1, Heading 2, Heading 3, Heading 4,
Heading 5, Block Quote, Definition Term, Definition, Body Text, Table
Caption, Image Caption; [character] Default Paragraph Font, Body Text
Char, Verbatim Char, Footnote Ref, Link.
.RS
.RE
.TP
.B \f[C]\-\-epub\-stylesheet=\f[]\f[I]FILE\f[]
Use the specified CSS file to style the EPUB.
If no stylesheet is specified, pandoc will look for a file
\f[C]epub.css\f[] in the user data directory (see
\f[C]\-\-data\-dir\f[]).
If it is not found there, sensible defaults will be used.
.RS
.RE
.TP
.B \f[C]\-\-epub\-cover\-image=\f[]\f[I]FILE\f[]
Use the specified image as the EPUB cover.
It is recommended that the image be less than 1000px in width and
height.
Note that in a markdown source document you can also specify
\f[C]cover\-image\f[] in a YAML metadata block (see EPUB Metadata,
below).
.RS
.RE
.TP
.B \f[C]\-\-epub\-metadata=\f[]\f[I]FILE\f[]
Look in the specified XML file for metadata for the EPUB.
The file should contain a series of Dublin Core elements, as documented
at http://dublincore.org/documents/dces/.
For example:
.RS
.IP
.nf
\f[C]
\ <dc:rights>Creative\ Commons</dc:rights>
\ <dc:language>es\-AR</dc:language>
\f[]
.fi
.PP
By default, pandoc will include the following metadata elements:
\f[C]<dc:title>\f[] (from the document title), \f[C]<dc:creator>\f[]
(from the document authors), \f[C]<dc:date>\f[] (from the document date,
which should be in ISO 8601 format), \f[C]<dc:language>\f[] (from the
\f[C]lang\f[] variable, or, if is not set, the locale), and
\f[C]<dc:identifier\ id="BookId">\f[] (a randomly generated UUID).
Any of these may be overridden by elements in the metadata file.
.PP
Note: if the source document is markdown, a YAML metadata block in the
document can be used instead.
See below under EPUB Metadata.
.RE
.TP
.B \f[C]\-\-epub\-embed\-font=\f[]\f[I]FILE\f[]
Embed the specified font in the EPUB.
This option can be repeated to embed multiple fonts.
To use embedded fonts, you will need to add declarations like the
following to your CSS (see \f[C]\-\-epub\-stylesheet\f[]):
.RS
.IP
.nf
\f[C]
\@font\-face\ {
font\-family:\ DejaVuSans;
font\-style:\ normal;
font\-weight:\ normal;
src:url("DejaVuSans\-Regular.ttf");
}
\@font\-face\ {
font\-family:\ DejaVuSans;
font\-style:\ normal;
font\-weight:\ bold;
src:url("DejaVuSans\-Bold.ttf");
}
\@font\-face\ {
font\-family:\ DejaVuSans;
font\-style:\ italic;
font\-weight:\ normal;
src:url("DejaVuSans\-Oblique.ttf");
}
\@font\-face\ {
font\-family:\ DejaVuSans;
font\-style:\ italic;
font\-weight:\ bold;
src:url("DejaVuSans\-BoldOblique.ttf");
}
body\ {\ font\-family:\ "DejaVuSans";\ }
\f[]
.fi
.RE
.TP
.B \f[C]\-\-epub\-chapter\-level=\f[]\f[I]NUMBER\f[]
Specify the header level at which to split the EPUB into separate
"chapter" files.
The default is to split into chapters at level 1 headers.
This option only affects the internal composition of the EPUB, not the
way chapters and sections are displayed to users.
Some readers may be slow if the chapter files are too large, so for
large documents with few level 1 headers, one might want to use a
chapter level of 2 or 3.
.RS
.RE
.TP
.B \f[C]\-\-latex\-engine=\f[]\f[I]pdflatex|lualatex|xelatex\f[]
Use the specified LaTeX engine when producing PDF output.
The default is \f[C]pdflatex\f[].
If the engine is not in your PATH, the full path of the engine may be
specified here.
.RS
.RE
.SS Citation rendering
.TP
.B \f[C]\-\-bibliography=\f[]\f[I]FILE\f[]
Set the \f[C]bibliography\f[] field in the document\[aq]s metadata to
\f[I]FILE\f[], overriding any value set in the metadata, and process
citations using \f[C]pandoc\-citeproc\f[].
(This is equivalent to
\f[C]\-\-metadata\ bibliography=FILE\ \-\-filter\ pandoc\-citeproc\f[].)
.RS
.RE
.TP
.B \f[C]\-\-csl=\f[]\f[I]FILE\f[]
Set the \f[C]csl\f[] field in the document\[aq]s metadata to
\f[I]FILE\f[], overriding any value set in the metadata.
(This is equivalent to \f[C]\-\-metadata\ csl=FILE\f[].)
.RS
.RE
.TP
.B \f[C]\-\-citation\-abbreviations=\f[]\f[I]FILE\f[]
Set the \f[C]citation\-abbreviations\f[] field in the document\[aq]s
metadata to \f[I]FILE\f[], overriding any value set in the metadata.
(This is equivalent to
\f[C]\-\-metadata\ citation\-abbreviations=FILE\f[].)
.RS
.RE
.TP
.B \f[C]\-\-natbib\f[]
Use natbib for citations in LaTeX output.
.RS
.RE
.TP
.B \f[C]\-\-biblatex\f[]
Use biblatex for citations in LaTeX output.
.RS
.RE
.SS Math rendering in HTML
.TP
.B \f[C]\-m\f[] [\f[I]URL\f[]], \f[C]\-\-latexmathml\f[][=\f[I]URL\f[]]
Use the LaTeXMathML script to display embedded TeX math in HTML output.
To insert a link to a local copy of the \f[C]LaTeXMathML.js\f[] script,
provide a \f[I]URL\f[].
If no \f[I]URL\f[] is provided, the contents of the script will be
inserted directly into the HTML header, preserving portability at the
price of efficiency.
If you plan to use math on several pages, it is much better to link to a
copy of the script, so it can be cached.
.RS
.RE
.TP
.B \f[C]\-\-mathml\f[][=\f[I]URL\f[]]
Convert TeX math to MathML (in \f[C]docbook\f[] as well as \f[C]html\f[]
and \f[C]html5\f[]).
In standalone \f[C]html\f[] output, a small javascript (or a link to
such a script if a \f[I]URL\f[] is supplied) will be inserted that
allows the MathML to be viewed on some browsers.
.RS
.RE
.TP
.B \f[C]\-\-jsmath\f[][=\f[I]URL\f[]]
Use jsMath to display embedded TeX math in HTML output.
The \f[I]URL\f[] should point to the jsMath load script (e.g.
\f[C]jsMath/easy/load.js\f[]); if provided, it will be linked to in the
header of standalone HTML documents.
If a \f[I]URL\f[] is not provided, no link to the jsMath load script
will be inserted; it is then up to the author to provide such a link in
the HTML template.
.RS
.RE
.TP
.B \f[C]\-\-mathjax\f[][=\f[I]URL\f[]]
Use MathJax to display embedded TeX math in HTML output.
The \f[I]URL\f[] should point to the \f[C]MathJax.js\f[] load script.
If a \f[I]URL\f[] is not provided, a link to the MathJax CDN will be
inserted.
.RS
.RE
.TP
.B \f[C]\-\-gladtex\f[]
Enclose TeX math in \f[C]<eq>\f[] tags in HTML output.
These can then be processed by gladTeX to produce links to images of the
typeset formulas.
.RS
.RE
.TP
.B \f[C]\-\-mimetex\f[][=\f[I]URL\f[]]
Render TeX math using the mimeTeX CGI script.
If \f[I]URL\f[] is not specified, it is assumed that the script is at
\f[C]/cgi\-bin/mimetex.cgi\f[].
.RS
.RE
.TP
.B \f[C]\-\-webtex\f[][=\f[I]URL\f[]]
Render TeX formulas using an external script that converts TeX formulas
to images.
The formula will be concatenated with the URL provided.
If \f[I]URL\f[] is not specified, the Google Chart API will be used.
.RS
.RE
.SS Options for wrapper scripts
.TP
.B \f[C]\-\-dump\-args\f[]
Print information about command\-line arguments to \f[I]stdout\f[], then
exit.
This option is intended primarily for use in wrapper scripts.
The first line of output contains the name of the output file specified
with the \f[C]\-o\f[] option, or \f[C]\-\f[] (for \f[I]stdout\f[]) if no
output file was specified.
The remaining lines contain the command\-line arguments, one per line,
in the order they appear.
These do not include regular Pandoc options and their arguments, but do
include any options appearing after a \f[C]\-\-\f[] separator at the end
of the line.
.RS
.RE
.TP
.B \f[C]\-\-ignore\-args\f[]
Ignore command\-line arguments (for use in wrapper scripts).
Regular Pandoc options are not ignored.
Thus, for example,
.RS
.IP
.nf
\f[C]
pandoc\ \-\-ignore\-args\ \-o\ foo.html\ \-s\ foo.txt\ \-\-\ \-e\ latin1
\f[]
.fi
.PP
is equivalent to
.IP
.nf
\f[C]
pandoc\ \-o\ foo.html\ \-s
\f[]
.fi
.RE
.SH TEMPLATES
.PP
When the \f[C]\-s/\-\-standalone\f[] option is used, pandoc uses a
template to add header and footer material that is needed for a
self\-standing document.
To see the default template that is used, just type
.IP
.nf
\f[C]
pandoc\ \-D\ FORMAT
\f[]
.fi
.PP
where \f[C]FORMAT\f[] is the name of the output format.
A custom template can be specified using the \f[C]\-\-template\f[]
option.
You can also override the system default templates for a given output
format \f[C]FORMAT\f[] by putting a file
\f[C]templates/default.FORMAT\f[] in the user data directory (see
\f[C]\-\-data\-dir\f[], above).
\f[I]Exceptions:\f[] For \f[C]odt\f[] output, customize the
\f[C]default.opendocument\f[] template.
For \f[C]pdf\f[] output, customize the \f[C]default.latex\f[] template.
.PP
Templates may contain \f[I]variables\f[].
Variable names are sequences of alphanumerics, \f[C]\-\f[], and
\f[C]_\f[], starting with a letter.
A variable name surrounded by \f[C]$\f[] signs will be replaced by its
value.
For example, the string \f[C]$title$\f[] in
.IP
.nf
\f[C]
<title>$title$</title>
\f[]
.fi
.PP
will be replaced by the document title.
.PP
To write a literal \f[C]$\f[] in a template, use \f[C]$$\f[].
.PP
Some variables are set automatically by pandoc.
These vary somewhat depending on the output format, but include metadata
fields (such as \f[C]title\f[], \f[C]author\f[], and \f[C]date\f[]) as
well as the following:
.TP
.B \f[C]header\-includes\f[]
contents specified by \f[C]\-H/\-\-include\-in\-header\f[] (may have
multiple values)
.RS
.RE
.TP
.B \f[C]toc\f[]
non\-null value if \f[C]\-\-toc/\-\-table\-of\-contents\f[] was
specified
.RS
.RE
.TP
.B \f[C]include\-before\f[]
contents specified by \f[C]\-B/\-\-include\-before\-body\f[] (may have
multiple values)
.RS
.RE
.TP
.B \f[C]include\-after\f[]
contents specified by \f[C]\-A/\-\-include\-after\-body\f[] (may have
multiple values)
.RS
.RE
.TP
.B \f[C]body\f[]
body of document
.RS
.RE
.TP
.B \f[C]lang\f[]
language code for HTML or LaTeX documents
.RS
.RE
.TP
.B \f[C]slidy\-url\f[]
base URL for Slidy documents (defaults to
\f[C]http://www.w3.org/Talks/Tools/Slidy2\f[])
.RS
.RE
.TP
.B \f[C]slideous\-url\f[]
base URL for Slideous documents (defaults to \f[C]default\f[])
.RS
.RE
.TP
.B \f[C]s5\-url\f[]
base URL for S5 documents (defaults to \f[C]ui/default\f[])
.RS
.RE
.TP
.B \f[C]revealjs\-url\f[]
base URL for reveal.js documents (defaults to \f[C]reveal.js\f[])
.RS
.RE
.TP
.B \f[C]theme\f[]
reveal.js or LaTeX beamer theme
.RS
.RE
.TP
.B \f[C]transition\f[]
reveal.js transition
.RS
.RE
.TP
.B \f[C]fontsize\f[]
font size (10pt, 11pt, 12pt) for LaTeX documents
.RS
.RE
.TP
.B \f[C]documentclass\f[]
document class for LaTeX documents
.RS
.RE
.TP
.B \f[C]classoption\f[]
option for LaTeX documentclass, e.g.
\f[C]oneside\f[]; may be repeated for multiple options
.RS
.RE
.TP
.B \f[C]geometry\f[]
options for LaTeX \f[C]geometry\f[] class, e.g.
\f[C]margin=1in\f[]; may be repeated for multiple options
.RS
.RE
.TP
.B \f[C]mainfont\f[], \f[C]sansfont\f[], \f[C]monofont\f[],
\f[C]mathfont\f[]
fonts for LaTeX documents (works only with xelatex and lualatex)
.RS
.RE
.TP
.B \f[C]colortheme\f[]
colortheme for LaTeX beamer documents
.RS
.RE
.TP
.B \f[C]fonttheme\f[]
fonttheme for LaTeX beamer documents
.RS
.RE
.TP
.B \f[C]linkcolor\f[]
color for internal links in LaTeX documents (\f[C]red\f[],
\f[C]green\f[], \f[C]magenta\f[], \f[C]cyan\f[], \f[C]blue\f[],
\f[C]black\f[])
.RS
.RE
.TP
.B \f[C]urlcolor\f[]
color for external links in LaTeX documents
.RS
.RE
.TP
.B \f[C]citecolor\f[]
color for citation links in LaTeX documents
.RS
.RE
.TP
.B \f[C]links\-as\-notes\f[]
causes links to be printed as footnotes in LaTeX documents
.RS
.RE
.TP
.B \f[C]biblio\-style\f[]
bibliography style in LaTeX, when used with \f[C]\-\-natbib\f[]
.RS
.RE
.TP
.B \f[C]biblio\-files\f[]
bibliography files to use in LaTeX, with \f[C]\-\-natbib\f[] or
\f[C]\-\-biblatex\f[]
.RS
.RE
.TP
.B \f[C]section\f[]
section number in man pages
.RS
.RE
.TP
.B \f[C]header\f[]
header in man pages
.RS
.RE
.TP
.B \f[C]footer\f[]
footer in man pages
.RS
.RE
.PP
Variables may be set at the command line using the
\f[C]\-V/\-\-variable\f[] option.
Variables set in this way override metadata fields with the same name.
.PP
Templates may contain conditionals.
The syntax is as follows:
.IP
.nf
\f[C]
$if(variable)$
X
$else$
Y
$endif$
\f[]
.fi
.PP
This will include \f[C]X\f[] in the template if \f[C]variable\f[] has a
non\-null value; otherwise it will include \f[C]Y\f[].
\f[C]X\f[] and \f[C]Y\f[] are placeholders for any valid template text,
and may include interpolated variables or other conditionals.
The \f[C]$else$\f[] section may be omitted.
.PP
When variables can have multiple values (for example, \f[C]author\f[] in
a multi\-author document), you can use the \f[C]$for$\f[] keyword:
.IP
.nf
\f[C]
$for(author)$
<meta\ name="author"\ content="$author$"\ />
$endfor$
\f[]
.fi
.PP
You can optionally specify a separator to be used between consecutive
items:
.IP
.nf
\f[C]
$for(author)$$author$$sep$,\ $endfor$
\f[]
.fi
.PP
A dot can be used to select a field of a variable that takes an object
as its value.
So, for example:
.IP
.nf
\f[C]
$author.name$\ ($author.affiliation$)
\f[]
.fi
.PP
If you use custom templates, you may need to revise them as pandoc
changes.
We recommend tracking the changes in the default templates, and
modifying your custom templates accordingly.
An easy way to do this is to fork the pandoc\-templates repository
(http://github.com/jgm/pandoc\-templates) and merge in changes after
each pandoc release.
.SH PRODUCING SLIDE SHOWS WITH PANDOC
.PP
You can use Pandoc to produce an HTML + javascript slide presentation
that can be viewed via a web browser.
There are five ways to do this, using S5, DZSlides, Slidy, Slideous, or
reveal.js.
You can also produce a PDF slide show using LaTeX beamer.
.PP
Here\[aq]s the markdown source for a simple slide show,
\f[C]habits.txt\f[]:
.IP
.nf
\f[C]
%\ Habits
%\ John\ Doe
%\ March\ 22,\ 2005

#\ In\ the\ morning

##\ Getting\ up

\-\ Turn\ off\ alarm
\-\ Get\ out\ of\ bed

##\ Breakfast

\-\ Eat\ eggs
\-\ Drink\ coffee

#\ In\ the\ evening

##\ Dinner

\-\ Eat\ spaghetti
\-\ Drink\ wine

\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-

![picture\ of\ spaghetti](images/spaghetti.jpg)

##\ Going\ to\ sleep

\-\ Get\ in\ bed
\-\ Count\ sheep
\f[]
.fi
.PP
To produce an HTML/javascript slide show, simply type
.IP
.nf
\f[C]
pandoc\ \-t\ FORMAT\ \-s\ habits.txt\ \-o\ habits.html
\f[]
.fi
.PP
where \f[C]FORMAT\f[] is either \f[C]s5\f[], \f[C]slidy\f[],
\f[C]slideous\f[], \f[C]dzslides\f[], or \f[C]revealjs\f[].
.PP
For Slidy, Slideous, reveal.js, and S5, the file produced by pandoc with
the \f[C]\-s/\-\-standalone\f[] option embeds a link to javascripts and
CSS files, which are assumed to be available at the relative path
\f[C]s5/default\f[] (for S5), \f[C]slideous\f[] (for Slideous),
\f[C]reveal.js\f[] (for reveal.js), or at the Slidy website at
\f[C]w3.org\f[] (for Slidy).
(These paths can be changed by setting the \f[C]slidy\-url\f[],
\f[C]slideous\-url\f[], \f[C]revealjs\-url\f[], or \f[C]s5\-url\f[]
variables; see \f[C]\-\-variable\f[], above.) For DZSlides, the
(relatively short) javascript and css are included in the file by
default.
.PP
With all HTML slide formats, the \f[C]\-\-self\-contained\f[] option can
be used to produce a single file that contains all of the data necessary
to display the slide show, including linked scripts, stylesheets,
images, and videos.
.PP
To produce a PDF slide show using beamer, type
.IP
.nf
\f[C]
pandoc\ \-t\ beamer\ habits.txt\ \-o\ habits.pdf
\f[]
.fi
.PP
Note that a reveal.js slide show can also be converted to a PDF by
printing it to a file from the browser.
.SS Structuring the slide show
.PP
By default, the \f[I]slide level\f[] is the highest header level in the
hierarchy that is followed immediately by content, and not another
header, somewhere in the document.
In the example above, level 1 headers are always followed by level 2
headers, which are followed by content, so 2 is the slide level.
This default can be overridden using the \f[C]\-\-slide\-level\f[]
option.
.PP
The document is carved up into slides according to the following rules:
.IP \[bu] 2
A horizontal rule always starts a new slide.
.IP \[bu] 2
A header at the slide level always starts a new slide.
.IP \[bu] 2
Headers \f[I]below\f[] the slide level in the hierarchy create headers
\f[I]within\f[] a slide.
.IP \[bu] 2
Headers \f[I]above\f[] the slide level in the hierarchy create "title
slides," which just contain the section title and help to break the
slide show into sections.
.IP \[bu] 2
A title page is constructed automatically from the document\[aq]s title
block, if present.
(In the case of beamer, this can be disabled by commenting out some
lines in the default template.)
.PP
These rules are designed to support many different styles of slide show.
If you don\[aq]t care about structuring your slides into sections and
subsections, you can just use level 1 headers for all each slide.
(In that case, level 1 will be the slide level.) But you can also
structure the slide show into sections, as in the example above.
.PP
Note: in reveal.js slide shows, if slide level is 2, a two\-dimensional
layout will be produced, with level 1 headers building horizontally and
level 2 headers building vertically.
It is not recommended that you use deeper nesting of section levels with
reveal.js.
.SS Incremental lists
.PP
By default, these writers produces lists that display "all at once." If
you want your lists to display incrementally (one item at a time), use
the \f[C]\-i\f[] option.
If you want a particular list to depart from the default (that is, to
display incrementally without the \f[C]\-i\f[] option and all at once
with the \f[C]\-i\f[] option), put it in a block quote:
.IP
.nf
\f[C]
>\ \-\ Eat\ spaghetti
>\ \-\ Drink\ wine
\f[]
.fi
.PP
In this way incremental and nonincremental lists can be mixed in a
single document.
.SS Inserting pauses
.PP
You can add "pauses" within a slide by including a paragraph containing
three dots, separated by spaces:
.IP
.nf
\f[C]
#\ Slide\ with\ a\ pause

content\ before\ the\ pause

\&.\ .\ .

content\ after\ the\ pause
\f[]
.fi
.SS Styling the slides
.PP
You can change the style of HTML slides by putting customized CSS files
in \f[C]$DATADIR/s5/default\f[] (for S5), \f[C]$DATADIR/slidy\f[] (for
Slidy), or \f[C]$DATADIR/slideous\f[] (for Slideous), where
\f[C]$DATADIR\f[] is the user data directory (see
\f[C]\-\-data\-dir\f[], above).
The originals may be found in pandoc\[aq]s system data directory
(generally \f[C]$CABALDIR/pandoc\-VERSION/s5/default\f[]).
Pandoc will look there for any files it does not find in the user data
directory.
.PP
For dzslides, the CSS is included in the HTML file itself, and may be
modified there.
.PP
For reveal.js, themes can be used by setting the \f[C]theme\f[]
variable, for example:
.IP
.nf
\f[C]
\-V\ theme=moon
\f[]
.fi
.PP
Or you can specify a custom stylesheet using the \f[C]\-\-css\f[]
option.
.PP
To style beamer slides, you can specify a beamer "theme" or "colortheme"
using the \f[C]\-V\f[] option:
.IP
.nf
\f[C]
pandoc\ \-t\ beamer\ habits.txt\ \-V\ theme:Warsaw\ \-o\ habits.pdf
\f[]
.fi
.PP
Note that header attributes will turn into slide attributes (on a
\f[C]<div>\f[] or \f[C]<section>\f[]) in HTML slide formats, allowing
you to style individual slides.
In Beamer, the only header attribute that affects slides is the
\f[C]allowframebreaks\f[] class, which sets the
\f[C]allowframebreaks\f[] option, causing multiple slides to be created
if the content overfills the frame.
This is recommended especially for bibliographies:
.IP
.nf
\f[C]
#\ References\ {.allowframebreaks}
\f[]
.fi
.SS Speaker notes
.PP
reveal.js has good support for speaker notes.
You can add notes to your markdown document thus:
.IP
.nf
\f[C]
<div\ class="notes">
This\ is\ my\ note.

\-\ It\ can\ contain\ markdown
\-\ like\ this\ list

</div>
\f[]
.fi
.PP
To show the notes window, press \f[C]s\f[] while viewing the
presentation.
Notes are not yet supported for other slide formats, but the notes will
not appear on the slides themselves.
.SH EPUB METADATA
.PP
EPUB metadata may be specified using the \f[C]\-\-epub\-metadata\f[]
option, but if the source document is markdown, it is better to use a
YAML metadata block.
Here is an example:
.IP
.nf
\f[C]
\-\-\-
title:
\-\ type:\ main
\ \ text:\ My\ Book
\-\ type:\ subtitle
\ \ text:\ An\ investigation\ of\ metadata
creator:
\-\ role:\ author
\ \ text:\ John\ Smith
\-\ role:\ editor
\ \ text:\ Sarah\ Jones
identifier:
\-\ scheme:\ DOI
\ \ text:\ doi:10.234234.234/33
publisher:\ \ My\ Press
rights:\ \ (c)\ 2007\ John\ Smith,\ CC\ BY\-NC
\&...
\f[]
.fi
.PP
The following fields are recognized:
.TP
.B \f[C]identifier\f[]
Either a string value or an object with fields \f[C]text\f[] and
\f[C]scheme\f[].
Valid values for \f[C]scheme\f[] are \f[C]ISBN\-10\f[],
\f[C]GTIN\-13\f[], \f[C]UPC\f[], \f[C]ISMN\-10\f[], \f[C]DOI\f[],
\f[C]LCCN\f[], \f[C]GTIN\-14\f[], \f[C]ISBN\-13\f[],
\f[C]Legal\ deposit\ number\f[], \f[C]URN\f[], \f[C]OCLC\f[],
\f[C]ISMN\-13\f[], \f[C]ISBN\-A\f[], \f[C]JP\f[], \f[C]OLCC\f[].
.RS
.RE
.TP
.B \f[C]title\f[]
Either a string value, or an object with fields \f[C]file\-as\f[] and
\f[C]type\f[], or a list of such objects.
Valid values for \f[C]type\f[] are \f[C]main\f[], \f[C]subtitle\f[],
\f[C]short\f[], \f[C]collection\f[], \f[C]edition\f[],
\f[C]extended\f[].
.RS
.RE
.TP
.B \f[C]creator\f[]
Either a string value, or an object with fields \f[C]role\f[],
\f[C]file\-as\f[], and \f[C]text\f[], or a list of such objects.
Valid values for \f[C]role\f[] are marc relators, but pandoc will
attempt to translate the human\-readable versions (like "author" and
"editor") to the appropriate marc relators.
.RS
.RE
.TP
.B \f[C]contributor\f[]
Same format as \f[C]creator\f[].
.RS
.RE
.TP
.B \f[C]date\f[]
A string value in \f[C]YYYY\-MM\-DD\f[] format.
(Only the year is necessary.) Pandoc will attempt to convert other
common date formats.
.RS
.RE
.TP
.B \f[C]language\f[]
A string value in RFC5646 format.
Pandoc will default to the local language if nothing is specified.
.RS
.RE
.TP
.B \f[C]subject\f[]
A string value or a list of such values.
.RS
.RE
.TP
.B \f[C]description\f[]
A string value.
.RS
.RE
.TP
.B \f[C]type\f[]
A string value.
.RS
.RE
.TP
.B \f[C]format\f[]
A string value.
.RS
.RE
.TP
.B \f[C]relation\f[]
A string value.
.RS
.RE
.TP
.B \f[C]coverage\f[]
A string value.
.RS
.RE
.TP
.B \f[C]rights\f[]
A string value.
.RS
.RE
.TP
.B \f[C]cover\-image\f[]
A string value (path to cover image).
.RS
.RE
.TP
.B \f[C]stylesheet\f[]
A string value (path to CSS stylesheet).
.RS
.RE
.SH LITERATE HASKELL SUPPORT
.PP
If you append \f[C]+lhs\f[] (or \f[C]+literate_haskell\f[]) to an
appropriate input or output format (\f[C]markdown\f[],
\f[C]markdown_strict\f[], \f[C]rst\f[], or \f[C]latex\f[] for input or
output; \f[C]beamer\f[], \f[C]html\f[] or \f[C]html5\f[] for output
only), pandoc will treat the document as literate Haskell source.
This means that
.IP \[bu] 2
In markdown input, "bird track" sections will be parsed as Haskell code
rather than block quotations.
Text between \f[C]\\begin{code}\f[] and \f[C]\\end{code}\f[] will also
be treated as Haskell code.
.IP \[bu] 2
In markdown output, code blocks with classes \f[C]haskell\f[] and
\f[C]literate\f[] will be rendered using bird tracks, and block
quotations will be indented one space, so they will not be treated as
Haskell code.
In addition, headers will be rendered setext\-style (with underlines)
rather than atx\-style (with \[aq]#\[aq] characters).
(This is because ghc treats \[aq]#\[aq] characters in column 1 as
introducing line numbers.)
.IP \[bu] 2
In restructured text input, "bird track" sections will be parsed as
Haskell code.
.IP \[bu] 2
In restructured text output, code blocks with class \f[C]haskell\f[]
will be rendered using bird tracks.
.IP \[bu] 2
In LaTeX input, text in \f[C]code\f[] environments will be parsed as
Haskell code.
.IP \[bu] 2
In LaTeX output, code blocks with class \f[C]haskell\f[] will be
rendered inside \f[C]code\f[] environments.
.IP \[bu] 2
In HTML output, code blocks with class \f[C]haskell\f[] will be rendered
with class \f[C]literatehaskell\f[] and bird tracks.
.PP
Examples:
.IP
.nf
\f[C]
pandoc\ \-f\ markdown+lhs\ \-t\ html
\f[]
.fi
.PP
reads literate Haskell source formatted with markdown conventions and
writes ordinary HTML (without bird tracks).
.IP
.nf
\f[C]
pandoc\ \-f\ markdown+lhs\ \-t\ html+lhs
\f[]
.fi
.PP
writes HTML with the Haskell code in bird tracks, so it can be copied
and pasted as literate Haskell source.
.SH CUSTOM WRITERS
.PP
Pandoc can be extended with custom writers written in lua.
(Pandoc includes a lua interpreter, so lua need not be installed
separately.)
.PP
To use a custom writer, simply specify the path to the lua script in
place of the output format.
For example:
.IP
.nf
\f[C]
pandoc\ \-t\ data/sample.lua
\f[]
.fi
.PP
Creating a custom writer requires writing a lua function for each
possible element in a pandoc document.
To get a documented example which you can modify according to your
needs, do
.IP
.nf
\f[C]
pandoc\ \-\-print\-default\-data\-file\ sample.lua
\f[]
.fi
.SH AUTHORS
.PP
© 2006\-2013 John MacFarlane (jgm at berkeley dot edu).
Released under the GPL, version 2 or greater.
This software carries no warranty of any kind.
(See COPYRIGHT for full copyright and warranty notices.) Other
contributors include Recai Oktaş, Paulo Tanimoto, Peter Wang, Andrea
Rossato, Eric Kow, infinity0x, Luke Plant, shreevatsa.public, Puneeth
Chaganti, Paul Rivier, rodja.trappe, Bradley Kuhn, thsutton, Nathan
Gass, Jonathan Daugherty, Jérémy Bobbio, Justin Bogner, qerub,
Christopher Sawicki, Kelsey Hightower, Masayoshi Takahashi, Antoine
Latter, Ralf Stephan, Eric Seidel, B.
Scott Michel, Gavin Beatty, Sergey Astanin, Arlo O\[aq]Keeffe, Denis
Laxalde, Brent Yorgey, David Lazar, Jamie F.
Olson.
.SH PANDOC'S MARKDOWN
For a complete description of pandoc's extensions to standard markdown,
see \f[C]pandoc_markdown\f[] (5).
.SH SEE ALSO
.PP
\f[C]pandoc_markdown\f[] (5).
.PP
The Pandoc source code and all documentation may be downloaded
from <http://johnmacfarlane.net/pandoc/>.
