name: HTTP
version: 4000.2.3
id: HTTP-4000.2.3-a82a21a372bb50c05076efce85290dc7
license: BSD3
copyright:
maintainer: Ganesh Sittampalam <http@projects.haskell.org>
stability:
homepage: https://github.com/haskell/HTTP
package-url:
synopsis: A library for client-side HTTP
description: The HTTP package supports client-side web programming in Haskell. It lets you set up
             HTTP connections, transmitting requests and processing the responses coming back, all
             from within the comforts of Haskell. It's dependent on the network package to operate,
             but other than that, the implementation is all written in Haskell.
             .
             A basic API for issuing single HTTP requests + receiving responses is provided. On top
             of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
             it taking care of handling the management of persistent connections, proxies,
             state (cookies) and authentication credentials required to handle multi-step
             interactions with a web server.
             .
             The representation of the bytes flowing across is extensible via the use of a type class,
             letting you pick the representation of requests and responses that best fits your use.
             Some pre-packaged, common instances are provided for you (@ByteString@, @String@.)
             .
             Here's an example use:
             .
             >
             >    do
             >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
             >              -- fetch document and return it (as a 'String'.)
             >      fmap (take 100) (getResponseBody rsp)
             >
             >    do
             >      (_, rsp)
             >         <- Network.Browser.browse $ do
             >               setAllowRedirects True -- handle HTTP redirects
             >               request $ getRequest "http://www.haskell.org/"
             >      return (take 100 (rspBody rsp))
category: Network
author: Warrick Gray <warrick.gray@hotmail.com>
exposed: True
exposed-modules: Network.BufferType Network.Stream
                 Network.StreamDebugger Network.StreamSocket Network.TCP
                 Network.HTTP Network.HTTP.Headers Network.HTTP.Base
                 Network.HTTP.Stream Network.HTTP.Auth Network.HTTP.Cookie
                 Network.HTTP.Proxy Network.HTTP.HandleStream Network.Browser
hidden-modules: Network.HTTP.Base64 Network.HTTP.MD5Aux
                Network.HTTP.Utils Paths_HTTP
trusted: False
import-dirs: /root/programming/haskell/alfredodinapoli.com/.hsenv_alfredodinapoli.com/cabal/lib/HTTP-4000.2.3/ghc-7.4.1
library-dirs: /root/programming/haskell/alfredodinapoli.com/.hsenv_alfredodinapoli.com/cabal/lib/HTTP-4000.2.3/ghc-7.4.1
hs-libraries: HSHTTP-4000.2.3
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: array-0.4.0.0-0b32f6f98c0297dbb0e5cfc0087bd1f0
         base-4.5.0.0-f76ceb9607ba9bd4fcfb9c7b92d8cfe1
         bytestring-0.9.2.1-4adca9710b1386944aaca5a7886ef98f
         mtl-2.1.2-b4218b10f76494af94aa7e4a289ef6ff
         network-2.3.0.14-74b19450eb71625034385e5f68885bca
         old-time-1.1.0.0-681e9789e8750358e65a9448b60ba641
         parsec-3.1.3-77012898ef99536dcb660bc67c2a40ea
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /root/programming/haskell/alfredodinapoli.com/.hsenv_alfredodinapoli.com/cabal/share/doc/HTTP-4000.2.3/html/HTTP.haddock
haddock-html: /root/programming/haskell/alfredodinapoli.com/.hsenv_alfredodinapoli.com/cabal/share/doc/HTTP-4000.2.3/html
